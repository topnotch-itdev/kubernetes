kind: Deployment
apiVersion: apps/v1
metadata:
  name: itframe
  namespace: itframe
  uid: 2bf65247-49ce-433a-bbb5-fb30b7706291
  resourceVersion: '1622139'
  generation: 5
  creationTimestamp: '2023-01-03T20:23:15Z'
  labels:
    app: itframe
    app.kubernetes.io/component: itframe
    app.kubernetes.io/instance: itframe
    app.kubernetes.io/part-of: itframe
  annotations:
    deployment.kubernetes.io/revision: '5'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"itframe","app.kubernetes.io/component":"itframe","app.kubernetes.io/instance":"itframe","app.kubernetes.io/part-of":"itframe"},"name":"itframe","namespace":"itframe"},"spec":{"progressDeadlineSeconds":600,"replicas":2,"revisionHistoryLimit":10,"selector":{"matchLabels":{"deployment":"itframe"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"deployment":"itframe"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["itframe"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"envFrom":[{"secretRef":{"name":"itframe-config"}}],"image":"registry.digitalocean.com/unmutedtech/itframe:canary","imagePullPolicy":"IfNotPresent","name":"itframe","resources":{"limits":{"cpu":"500m","memory":"4Gi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/opt/app-root/src/src/config.json","name":"config","readOnly":true,"subPath":"itframe-config"},{"mountPath":"/mnt/etcd/certs/ca.pem","name":"etcd-certs","subPath":"ca.pem"},{"mountPath":"/mnt/etcd/certs/client/client.pem","name":"etcd-certs","subPath":"client.pem"},{"mountPath":"/mnt/etcd/certs/client/client-key.pem","name":"etcd-certs","subPath":"client-key.pem"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30,"volumes":[{"name":"config","secret":{"defaultMode":420,"secretName":"itframe-config"}},{"name":"etcd-certs","secret":{"defaultMode":420,"secretName":"etcd-certs"}}]}}}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: apps/v1
      time: '2023-01-03T20:24:19Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:deployment: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"itframe"}:
                  .: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/mnt/etcd/certs/ca.pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                    k:{"mountPath":"/mnt/etcd/certs/client/client-key.pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                    k:{"mountPath":"/mnt/etcd/certs/client/client.pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                    k:{"mountPath":"/opt/app-root/src/src/config.json"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
    - manager: k8saasapi
      operation: Update
      apiVersion: apps/v1
      time: '2023-01-06T13:18:47Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-01-06T13:19:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      subresource: status
    - manager: kubectl-rollout
      operation: Update
      apiVersion: apps/v1
      time: '2023-01-06T13:19:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                f:kubectl.kubernetes.io/restartedAt: {}
spec:
  replicas: 2
  selector:
    matchLabels:
      deployment: itframe
  template:
    metadata:
      creationTimestamp: null
      labels:
        deployment: itframe
      annotations:
        kubectl.kubernetes.io/restartedAt: '2023-01-06T22:19:37+09:00'
    spec:
      volumes:
        - name: config
          secret:
            secretName: itframe-config
            defaultMode: 420
        - name: etcd-certs
          secret:
            secretName: etcd-certs
            defaultMode: 420
      containers:
        - name: itframe
          image: registry.digitalocean.com/unmutedtech/itframe:canary
          envFrom:
            - secretRef:
                name: itframe-config
          resources:
            limits:
              cpu: 500m
              memory: 4Gi
          volumeMounts:
            - name: config
              readOnly: true
              mountPath: /opt/app-root/src/src/config.json
              subPath: itframe-config
            - name: etcd-certs
              mountPath: /mnt/etcd/certs/ca.pem
              subPath: ca.pem
            - name: etcd-certs
              mountPath: /mnt/etcd/certs/client/client.pem
              subPath: client.pem
            - name: etcd-certs
              mountPath: /mnt/etcd/certs/client/client-key.pem
              subPath: client-key.pem
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - itframe
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 5
  replicas: 3
  updatedReplicas: 1
  unavailableReplicas: 3
  conditions:
    - type: Available
      status: 'False'
      lastUpdateTime: '2023-01-03T20:23:15Z'
      lastTransitionTime: '2023-01-03T20:23:15Z'
      reason: MinimumReplicasUnavailable
      message: Deployment does not have minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-01-06T13:19:39Z'
      lastTransitionTime: '2023-01-06T13:11:36Z'
      reason: ReplicaSetUpdated
      message: ReplicaSet "itframe-6b6dc8b5b4" is progressing.
